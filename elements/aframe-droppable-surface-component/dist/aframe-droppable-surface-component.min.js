!function(e){function t(n){if(i[n])return i[n].exports;var s=i[n]={exports:{},id:n,loaded:!1};return e[n].call(s.exports,s,s.exports,t),s.loaded=!0,s.exports}var i={};return t.m=e,t.c=i,t.p="",t(0)}([function(e,t){if("undefined"==typeof AFRAME)throw new Error("Component attempted to register before AFRAME was available.");AFRAME.registerComponent("droppable-surface",{schema:{},init:function(){this.activeItem=null,this.vec3=new THREE.Vector3,this.box3=new THREE.Box3,this.el.addEventListener("click",function(e){this.placeItem(e.detail.intersection.point)}.bind(this)),this.el.sceneEl.addEventListener("droppable-item-clicked",function(e){this.setActiveItem(e.detail)}.bind(this))},remove:function(){this.el.removeEventListener("click"),this.el.sceneEl.removeEventListener("droppable-item-clicked")},setActiveItem:function(e){e&&(e.isSameNode(this.activeItem)?(this.activeItem=null,this.el.emit("droppable-surface-active-item-added",e,!0)):(this.activeItem=e,this.el.emit("droppable-surface-new-active-item-removed",e,!0)))},placeItem:function(e){if(this.activeItem){const t=this.box3.setFromObject(this.activeItem.getObject3D("mesh")),i={x:0,y:-(t.max.y-t.min.y)/2,z:0},n=this.vec3.copy(e).sub(i);this.activeItem.setAttribute("position",n)}}}),AFRAME.registerComponent("droppable-item",{schema:{},init:function(){this.el.addEventListener("click",function(e){this.el.emit("droppable-item-clicked",this.el,!0)}.bind(this))},remove:function(){this.el.removeEventListener("click")}})}]);